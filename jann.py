import sqlite3

from aiogram import Dispatcher, Bot
from aiogram import types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher.filters.state import StatesGroup, State
from aiogram.dispatcher import FSMContext
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils import executor

storage = MemoryStorage()


class FSM(StatesGroup):
    message = State()


bot = Bot("5693287180:AAHs_0p-6D3R7bVSa9ArYbuoWdEzoW6GaSY")
dp = Dispatcher(bot, storage=storage)
admins = [1140638587, 41520535]
supp = "https://t.me/katana_tm"
conn = sqlite3.connect('jannet.db', check_same_thread=False)
cursor = conn.cursor()
mark = InlineKeyboardMarkup()
mark.add(InlineKeyboardButton("–£—Å–ª—É–≥–∏", callback_data="services"),
         InlineKeyboardButton("–û –º–Ω–µ", callback_data="about_me"))
mark.add(InlineKeyboardButton("–°–≤—è–∑–∞—Ç—å—Å—è —Å–æ –º–Ω–æ–π", url=supp))


@dp.message_handler(commands=["start"])
async def start(message):
    tg_id = message.chat.id
    tg_user = message.chat.username
    tg_fio = f"{message.chat.first_name} {message.chat.last_name}"
    cursor.execute("INSERT INTO users (tg_id, tg_tag, tg_fio) VALUES (?, ?, ?)", (tg_id, tg_user, tg_fio,))
    conn.commit()
    await bot.send_message(message.chat.id, "<b>–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∫–æ—É—á–µ—Ä–∞ - –ñ–∞–Ω–Ω—ã –ü–∞–Ω—á–∏—à–∏–Ω–æ–π!</b>",
                           parse_mode="HTML", reply_markup=mark)


@dp.message_handler(commands=["adm"])
async def start(message):
    id_tg = message.chat.id
    if id_tg in admins:
        adm = InlineKeyboardMarkup()
        adm.add(InlineKeyboardButton("–°–ø–∏—Å–∫–∏ —é–∑–µ—Ä–æ–≤", callback_data="users_list"))
        adm.add(InlineKeyboardButton("–†–∞—Å—Å—ã–ª–∫–∞", callback_data="send_mess"))
        await bot.send_message(message.chat.id, "<b>–û–¥–æ–±—Ä–µ–Ω–æ‚úÖ</b>", parse_mode="HTML", reply_markup=adm)
    else:
        await bot.send_message(message.chat.id, "<b>–û—Ç–∫–∞–∑–∞–Ω–æü´°</b>")

@dp.callback_query_handler(lambda call: call.data and call.data.startswith("give_"))
async def delete(call: types.CallbackQuery):
    cursor.execute("UPDATE users SET opl_why = 'opl' WHERE tg_id = ?", (call.data.replace("give_", ""),))
    conn.commit()
    row = cursor.execute("SELECT * FROM users WHERE opl_why = 'no_opl'").fetchall()
    opl = InlineKeyboardMarkup()
    for i in range(len(row)):
        opl.add(InlineKeyboardButton(f"{row[i][2]}", callback_data=f"{row[i][1]}"),
                InlineKeyboardButton("üö´", callback_data=f"give_{row[i][1]}"))
    opl.add(InlineKeyboardButton("–ù–∞–∑–∞–¥üëà", callback_data="users_list"))
    await call.message.edit_text("<b>–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>\n\n"
                                 "P.S. —á—Ç–æ–±—ã –æ–±–æ–∑–Ω–∞—á–∏—Ç—å —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –æ–ø–ª–∞—Ç–∏–ª –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ 'üö´'",
                                 parse_mode="HTML", reply_markup=opl)
@dp.callback_query_handler(lambda call: call.data and call.data.startswith("no_give_"))
async def delete(call: types.CallbackQuery):
    cursor.execute("UPDATE users SET opl_why = 'no_opl' WHERE tg_id = ?", (call.data.replace("no_give_", ""),))
    conn.commit()
    row = cursor.execute("SELECT * FROM users WHERE opl_why = 'opl'").fetchall()
    opl = InlineKeyboardMarkup()
    for i in range(len(row)):
        opl.add(InlineKeyboardButton(f"{row[i][2]}", callback_data=f"{row[i][1]}"),
                InlineKeyboardButton("üö´", callback_data=f"give_{row[i][1]}"))
    opl.add(InlineKeyboardButton("–ù–∞–∑–∞–¥üëà", callback_data="users_list"))
    await call.message.edit_text("<b>–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>\n\n"
                                 "P.S. —á—Ç–æ–±—ã –æ–±–æ–∑–Ω–∞—á–∏—Ç—å —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –æ–ø–ª–∞—Ç–∏–ª –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ 'üö´'",
                                 parse_mode="HTML", reply_markup=opl)
@dp.callback_query_handler(lambda call: True)
async def call(call):
    if call.data == "services":
        serv = InlineKeyboardMarkup()
        serv.add(InlineKeyboardButton("–°–æ–º–∞—Ç–∏–ø–æ–ª–æ–≥–∏—è", callback_data="somatipologia"))
        serv.add(InlineKeyboardButton("–¢—Ä–µ–Ω–∏–Ω–≥–∏ –ª–∏—á–Ω–æ—Å—Ç–Ω–æ–≥–æ —Ä–æ—Å—Ç–∞", callback_data="tren_lich_rost"))
        serv.add(InlineKeyboardButton('–ò–≥—Ä–∞ "–°–µ–∫—Ä–µ—Ç –¥–µ–Ω–µ–≥"', callback_data="secret_money"))
        serv.add(InlineKeyboardButton('–ö–Ω–∏–≥–∞ "–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –∞–∑–±—É–∫–∞ –¥–ª—è –¥–µ—Ç–µ–π –∏ –≤–∑—Ä–æ—Å–ª—ã—Ö"', callback_data="fin_azb"))
        serv.add(InlineKeyboardButton("–ù–∞ –≥–ª–∞–≤–Ω—É—é‚¨Ö", callback_data="callback"))
        await call.message.edit_text("<b>–Ø –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é 4 —Ç–∏–ø–∞ —É—Å–ª—É–≥\n\n"
                                     "–ü–æ–¥—Ä–æ–±–Ω–µ–µ —É–∑–Ω–∞–π—Ç–µ –Ω–∏–∂–µ‚¨á</b>", parse_mode="HTML", reply_markup=serv)
    elif call.data == "fin_azb":
        back = InlineKeyboardMarkup()
        back.add(InlineKeyboardButton("–ù–∞–ø–∏—Å–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä—Éüíª", url=supp))
        back.add(InlineKeyboardButton("–ù–∞–∑–∞–¥‚¨Ö", callback_data="services"))
        await call.message.edit_text("<b>–ö–Ω–∏–≥–∞ –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –∞–∑–±—É–∫–∞ –¥–ª—è –¥–µ—Ç–µ–π –∏ –≤–∑—Ä–æ—Å–ª—ã—Ö\n\n"
                                     "<i>–õ–∏—á–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è</i>\n\n"
                                     "–°—Ç–æ–∏–º–æ—Å—Ç—å –æ—Ç 5.000 —Ä—É–±–ª–µ–π.</b>", parse_mode="HTML", reply_markup=back)
    elif call.data == "tren_lich_rost":
        back = InlineKeyboardMarkup()
        back.add(InlineKeyboardButton("–ù–∞–ø–∏—Å–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä—Éüíª", url=supp))
        back.add(InlineKeyboardButton("–ù–∞–∑–∞–¥‚¨Ö", callback_data="services"))
        await call.message.edit_text("<b>–¢—Ä–µ–Ω–∏–Ω–≥–∏ –ª–∏—á–Ω–æ—Å—Ç–Ω–æ–≥–æ —Ä–æ—Å—Ç–∞\n\n"
                                     "<i>–õ–∏—á–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è</i>\n\n"
                                     "<i>–ê–Ω–∞–ª–∏–∑</i>\n\n"
                                     "–°—Ç–æ–∏–º–æ—Å—Ç—å –æ—Ç 5.000 —Ä—É–±–ª–µ–π.</b>", parse_mode="HTML", reply_markup=back)
    elif call.data == "somatipologia":
        som = InlineKeyboardMarkup()
        som.add(InlineKeyboardButton("–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –°–æ–º–∞–¢–∏–ø - –≤—ã–±–æ—Ä –¥–µ–ª–∞ –ø–æ –¥—É—à–µ", callback_data="search_soma_choice_work"))
        som.add(InlineKeyboardButton("–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –°–æ–º–∞–¢–∏–ø", callback_data="search_soma"))
        som.add(InlineKeyboardButton("–°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –ø–∞—Ä—ã", callback_data="sovm_pari"))
        som.add(InlineKeyboardButton("–ü–æ–¥–±–æ—Ä –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ –ø–∞—Ä—Ç–Ω—ë—Ä–∞", callback_data="podbor_ideal_parner"))
        som.add(InlineKeyboardButton("–ê—É–¥–∏—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª–∞", callback_data="audit_personal"))
        som.add(InlineKeyboardButton("–ê—É–¥–∏—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª–∞ –Ω–∞ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–∏", callback_data="audit_personal_on_predpr"))
        som.add(InlineKeyboardButton("–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –°–æ–º–∞–¢–∏–ø —Ä–µ–±—ë–Ω–∫–∞", callback_data="search_soma_chindler"))
        som.add(InlineKeyboardButton("–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –∫–æ—É—á–∏–Ω–≥ –ø–æ —Ä–∞–∑–≤–∏—Ç–∏—é –°–æ–º–∞—Ç–∏–ø–∞",
                                     callback_data="ind_coach_razv_som"))
        som.add(InlineKeyboardButton("–ù–∞–∑–∞–¥‚¨Ö", callback_data="services"))
        await call.message.edit_text("–°–æ–º–∞–¢–∏–ø", reply_markup=som)
    elif call.data == "search_soma_choice_work":
        back = InlineKeyboardMarkup()
        back.add(InlineKeyboardButton("–ù–∞–ø–∏—Å–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä—Éüíª", url=supp))
        back.add(InlineKeyboardButton("–ù–∞–∑–∞–¥‚¨Ö", callback_data="somatipologia"))
        await call.message.edit_text("<b>–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –°–æ–º–∞–¢–∏–ø - –≤—ã–±–æ—Ä –¥–µ–ª–∞ –ø–æ –¥—É—à–µ\n\n"
                                     "–°—Ç–æ–∏–º–æ—Å—Ç—å 5.000 —Ä—É–±–ª–µ–π.</b>", parse_mode="HTML", reply_markup=back)
    elif call.data == "search_soma":
        back = InlineKeyboardMarkup()
        back.add(InlineKeyboardButton("–ù–∞–ø–∏—Å–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä—Éüíª", url=supp))
        back.add(InlineKeyboardButton("–ù–∞–∑–∞–¥‚¨Ö", callback_data="somatipologia"))
        await call.message.edit_text("<b>–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –°–æ–º–∞–¢–∏–ø</b>\n\n"
                                     "<i>–ü–æ–¥—Å–æ–∑–Ω–∞—Ç–µ–ª—å–Ω—ã–µ —Ü–µ–Ω–Ω–æ—Å—Ç–∏ (–ü–¶)\n\n</i>"
                                     "<i>–ú–∏—Å—Å–∏—è –≤–∞—à–µ–≥–æ –°–æ–º–∞–¢–∏–ø–∞\n\n</i>"
                                     "<i>–£—Ä–æ–≤–µ–Ω—å –≤–∞—à–µ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è (–£–†)\n\n</i>"
                                     "<i>–û—Å–Ω–æ–≤–Ω–∞—è —Å–∏–ª–∞ (–û–°)\n\n</i>"
                                     "<i>–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è 1,5 —á–∞—Å–∞\n\n</i>"
                                     "<i>–ü–∏—Å—å–º–µ–Ω–Ω—ã–µ –≤—ã–≤–æ–¥—ã –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</i>\n\n"
                                     "<b>–°—Ç–æ–∏–º–æ—Å—Ç—å 9.900 —Ä—É–±–ª–µ–π.</b>", parse_mode="HTML", reply_markup=back)
    elif call.data == "sovm_pari":
        back = InlineKeyboardMarkup()
        back.add(InlineKeyboardButton("–ù–∞–ø–∏—Å–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä—Éüíª", url=supp))
        back.add(InlineKeyboardButton("–ù–∞–∑–∞–¥‚¨Ö", callback_data="somatipologia"))
        await call.message.edit_text("<b>–°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –ø–∞—Ä—ã</b>\n\n"
                                     "<i>–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –°–æ–º–∞–¢–∏–ø–æ–≤ (–ü–¶, –û–°, –£–†, –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ)\n\n</i>"
                                     "<i>–í—ã–¥–∞—á–∞ –ø–∏—Å—å–º–µ–Ω–Ω—ã—Ö –∑–∞–∫–ª—é—á–µ–Ω–∏–π –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π\n\n</i>"
                                     "<i>–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è 3-4 —á–∞—Å–∞\n\n</i>"
                                     "<i>–ü–∏—Å—å–º–µ–Ω–Ω—ã–µ –≤—ã–≤–æ–¥—ã –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</i>\n\n"
                                     "<b>–°—Ç–æ–∏–º–æ—Å—Ç—å 18.900 —Ä—É–±–ª–µ–π.</b>", parse_mode="HTML", reply_markup=back)
    elif call.data == "podbor_ideal_parner":
        back = InlineKeyboardMarkup()
        back.add(InlineKeyboardButton("–ù–∞–ø–∏—Å–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä—Éüíª", url=supp))
        back.add(InlineKeyboardButton("–ù–∞–∑–∞–¥‚¨Ö", callback_data="somatipologia"))
        await call.message.edit_text("<b>–ü–æ–¥–±–æ—Ä –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ –ø–∞—Ä—Ç–Ω—ë—Ä–∞</b>\n\n"
                                     "<i>–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –°–æ–º–∞–¢–∏–ø–æ–≤ (–ü–¶, –û–°, –£–†, –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ)\n\n</i>"
                                     "<i>–í—ã–¥–∞—á–∞ –ø–∏—Å—å–º–µ–Ω–Ω—ã—Ö –∑–∞–∫–ª—é—á–µ–Ω–∏–π –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π\n\n</i>"
                                     "<i>–û–ø–∏—Å–∞–Ω–∏–µ –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ –ø–∞—Ä—Ç–Ω–µ—Ä–∞ –ø–æ –≤—Å–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏, –≥–¥–µ –µ–≥–æ –Ω–∞–π—Ç–∏\n\n</i>"
                                     "<b>–°—Ç–æ–∏–º–æ—Å—Ç—å 9.900 —Ä—É–±–ª–µ–π.</b>", parse_mode="HTML", reply_markup=back)
    elif call.data == "audit_personal":
        back = InlineKeyboardMarkup()
        back.add(InlineKeyboardButton("–ù–∞–ø–∏—Å–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä—Éüíª", url=supp))
        back.add(InlineKeyboardButton("–ù–∞–∑–∞–¥‚¨Ö", callback_data="somatipologia"))
        await call.message.edit_text("<b>–ê—É–¥–∏—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª–∞</b>\n\n"
                                     "<i>–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –°–æ–º–∞–¢–∏–ø–∞ (–ü–¶, –û–°, –£–†, –°–£–†–ö (—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ —É—Ä–æ–≤–Ω—é —Ä–∞–∑–≤–∏—Ç–∏—è –∫–æ–º–ø–∞–Ω–∏–∏)\n\n</i>"
                                     "<i>–í–∞—à–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ –±–∏–∑–Ω–µ—Å–µ, –Ω–∞ –∫–∞–∫–æ–º —ç—Ç–∞–ø–µ, –∑–∞–∫–ª—é—á–µ–Ω–∏–µ –ø–æ 10 –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º\n\n</i>"
                                     "<i>–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –æ–¥–Ω–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ 1,5 - 2 —á–∞—Å–∞\n\n</i>"
                                     "<i>–ü–∏—Å—å–º–µ–Ω–Ω—ã–µ –≤—ã–≤–æ–¥—ã –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</i>\n\n"
                                     "<b>–°—Ç–æ–∏–º–æ—Å—Ç—å –Ω–∞ –æ–¥–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ 15.900 —Ä—É–±–ª–µ–π.</b>", parse_mode="HTML", reply_markup=back)
    elif call.data == "audit_personal_on_predpr":
        back = InlineKeyboardMarkup()
        back.add(InlineKeyboardButton("–ù–∞–ø–∏—Å–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä—Éüíª", url=supp))
        back.add(InlineKeyboardButton("–ù–∞–∑–∞–¥‚¨Ö", callback_data="somatipologia"))
        await call.message.edit_text("<b>–ê—É–¥–∏—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª–∞ –Ω–∞ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–∏</b>\n\n"
                                     "<i>–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –°–æ–º–∞–¢–∏–ø–∞ (–ü–¶, –û–°, –£–†, –°–£–†–ö (—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ —É—Ä–æ–≤–Ω—é —Ä–∞–∑–≤–∏—Ç–∏—è –∫–æ–º–ø–∞–Ω–∏–∏)\n\n</i>"
                                     "<i>+ —Ç—Ä–µ–Ω–∏–Ω–≥ ¬´–°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –≤ –∫–æ–º–∞–Ω–¥–µ¬ª\n\n</i>"
                                     "<i>–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –æ–¥–Ω–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ 1,5 - 2 —á–∞—Å–∞\n\n</i>"
                                     "<i>–ü–∏—Å—å–º–µ–Ω–Ω—ã–µ –≤—ã–≤–æ–¥—ã –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</i>\n\n"
                                     "<b>–°—Ç–æ–∏–º–æ—Å—Ç—å 370.000 —Ä—É–±–ª–µ–π.</b>", parse_mode="HTML",
                                     reply_markup=back)
    elif call.data == "search_soma_chindler":
        back = InlineKeyboardMarkup()
        back.add(InlineKeyboardButton("–ù–∞–ø–∏—Å–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä—Éüíª", url=supp))
        back.add(InlineKeyboardButton("–ù–∞–∑–∞–¥‚¨Ö", callback_data="somatipologia"))
        await call.message.edit_text("<b>–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –°–æ–º–∞–¢–∏–ø —Ä–µ–±—ë–Ω–∫–∞ –∏ –ü–¶</b>\n\n"
                                     "<i>–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è 1,5 - 2 —á–∞—Å–∞\n\n</i>"
                                     "<i>–í—ã–¥–∞—á–∞ –ø–∏—Å—å–º–µ–Ω–Ω–æ–≥–æ –∑–∞–∫–ª—é—á–µ–Ω–∏—è –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø–æ –≤–æ—Å–ø–∏—Ç–∞–Ω–∏—é –∏ —Ä–∞–∑–≤–∏—Ç–∏—é</i>\n\n"
                                     "<b>–°—Ç–æ–∏–º–æ—Å—Ç—å 9.900 —Ä—É–±–ª–µ–π.</b>", parse_mode="HTML",
                                     reply_markup=back)
    elif call.data == "ind_coach_razv_som":
        back = InlineKeyboardMarkup()
        back.add(InlineKeyboardButton("–ù–∞–ø–∏—Å–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä—Éüíª", url=supp))
        back.add(InlineKeyboardButton("–ù–∞–∑–∞–¥‚¨Ö", callback_data="somatipologia"))
        await call.message.edit_text("<b>–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –∫–æ—É—á–∏–Ω–≥ –ø–æ —Ä–∞–∑–≤–∏—Ç–∏—é –°–æ–º–∞–¢–∏–ø–∞</b>\n\n"
                                     "<i>–ü–æ–≤—ã—à–µ–Ω–∏–µ –£—Ä–æ–≤–Ω—è –†–∞–∑–≤–∏—Ç–∏—è\n\n</i>"
                                     "<i>6 –Ω–µ–¥–µ–ª—å —Ä–∞–±–æ—Ç—ã\n\n</i>"
                                     "<i>1 ‚Äì 2 –≤–∏–¥–µ–æ –≤—Å—Ç—Ä–µ—á–∏ –≤ –Ω–µ–¥–µ–ª—é</i>\n\n"
                                     "<b>–°—Ç–æ–∏–º–æ—Å—Ç—å 70.000 - 250.000 —Ä—É–±–ª–µ–π.</b>", parse_mode="HTML",
                                     reply_markup=back)
    elif call.data == "secret_money":
        back = InlineKeyboardMarkup()
        back.add(InlineKeyboardButton("–ù–∞–ø–∏—Å–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä—Éüíª", url=supp))
        back.add(InlineKeyboardButton("–ù–∞–∑–∞–¥‚¨Ö", callback_data="services"))
        await call.message.edit_text("<b>–ò–≥—Ä–∞ –°–µ–∫—Ä–µ—Ç –î–µ–Ω–µ–≥</b>\n\n"
                                     "<b>–ë–∏–∑–Ω–µ—Å-–∏–≥—Ä–∞ ¬´–°–µ–∫—Ä–µ—Ç –¥–µ–Ω–µ–≥¬ª</b> ‚Äî –Ω–∞—Å—Ç–æ—è—â–∏–π —Ç—Ä–µ–Ω–∞–∂–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ä–∞—Å—à–∏—Ä–∏—Ç—å –≥—Ä–∞–Ω–∏—Ü—ã –í–∞—à–µ–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç–∏ –∏ –ø—Ä–∏–≤–ª–µ—á—å –≤ –í–∞—à—É –∂–∏–∑–Ω—å –≥–æ—Ä–∞–∑–¥–æ –±–æ–ª—å—à–µ –¥–µ–Ω–µ–≥, —á–µ–º –í—ã –∏–º–µ–µ—Ç–µ —Å–µ–π—á–∞—Å.\n\n"
                                     "<i>–ò–≥—Ä–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç —Å–æ–±—ã—Ç–∏—è –∏–∑ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –∏ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø—É—Ç–µ–º –ø—Ä–æ–± –∏ –æ—à–∏–±–æ–∫ –∏–¥—Ç–∏ –∫ —Å–≤–æ–µ–π —Ü–µ–ª–∏.</i>\n\n"
                                     "<i>–°–∏—Å—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–≥—Ä–∞—è –≤ —ç—Ç—É —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—É—é –∏–≥—Ä—É, –í—ã –Ω–∞—Ä–∞–±–æ—Ç–∞–µ—Ç–µ –Ω–∞–≤—ã–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏–≥–æ–¥—è—Ç—Å—è –≤ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–º –º–∏—Ä–µ.</i>\n\n"
                                     "<i>–û–≥—Ä–æ–º–Ω–∞—è –ø–æ–ª—å–∑–∞ –∏ –ø—Ä–∏—è—Ç–Ω–æ–µ –≤—Ä–µ–º—è–ø—Ä–µ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ ‚Äî –Ω–µ—Å–æ–º–Ω–µ–Ω–Ω—ã–µ –ø–ª—é—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ—Å–µ—Ç –∏–≥—Ä–∞ ¬´–°–µ–∫—Ä–µ—Ç –î–µ–Ω–µ–≥¬ª.</i>\n\n"
                                     "<i>–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ —É –Ω–∞—Å –ë–∏–∑–Ω–µ—Å-–∏–≥—Ä—É ¬´–°–µ–∫—Ä–µ—Ç –¥–µ–Ω–µ–≥¬ª –∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ.</i>\n\n"
                                     "<b>–°—Ç–æ–∏–º–æ—Å—Ç—å –æ—Ç 10.000 —Ä—É–±–ª–µ–π.</b>", parse_mode="HTML", reply_markup=back)
    elif call.data == "fin_azb":
        pass
    elif call.data == "about_me":
        back = InlineKeyboardMarkup()
        back.add(InlineKeyboardButton("–ù–∞ –≥–ª–∞–≤–Ω—É—é‚¨Ö", callback_data="callback"))
        await call.message.edit_text("<b>–ß—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å –æ–±–æ –º–Ω–µ?\n\n</b>"
                                     "<b>–Ø</b> - —ç–∫—Å–ø–µ—Ä—Ç –≤ –æ–±–ª–∞—Å—Ç–∏ —Ä–∞–∑–≤–∏—Ç–∏—è –ª–∏—á–Ω–æ–π –∏ –∫–æ–º–∞–Ω–¥–Ω–æ–π —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏, –¢—Ä–µ–Ω–µ—Ä –∏ –ö–æ—É—á –ø–æ —Ä–∞–∑–≤–∏—Ç–∏—é –Ω–∞–≤—ã–∫–æ–≤ –∏ –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–π –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –æ–±–ª–∞—Å—Ç—è—Ö –∂–∏–∑–Ω–∏!\n\n "
                                     "<b>–°–æ–º–∞—Ç–∏–ø–æ–ª–æ–≥</b>, —á–ª–µ–Ω –∞—Å—Å–æ—Ü–∏–∞—Ü–∏–∏ —Å–æ–º–∞—Ç–∏–ø–æ–ª–æ–≥–æ–≤\n\n"
                                     "<b>–í–µ–¥—É —Ç—Ä–µ–Ω–∏–Ω–≥–∏ –∏ –ø—Ä–æ–≤–æ–∂—É –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏</b> –ø–æ —Ä–∞–∑–≤–∏—Ç–∏—é –ª–∏—á–Ω–æ—Å—Ç–∏:\n"
                                     "¬§ <i>–¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã\n</i>"
                                     "¬§ <i>–¢—Ä–µ–Ω–∏–Ω–≥–∏ –¥–µ–Ω—å–≥–∏/—Ñ–∏–Ω–∞–Ω—Å—ã\n</i>"
                                     "¬§ <i>–û—Ç–Ω–æ—à–µ–Ω–∏—è –º—É–∂—á–∏–Ω –∏ –∂–µ–Ω—â–∏–Ω\n</i>"
                                     "¬§ <i>–°–µ–∫—Ä–µ—Ç—ã —Å–µ–º–µ–π–Ω–æ–≥–æ —Å—á–∞—Å—Ç—å—è\n</i>"
                                     "¬§ <i>–ñ–µ–Ω—Å–∫–∏–µ —Ç—Ä–µ–Ω–∏–Ω–≥–∏\n\n</i>"
                                     "–ï—Å—Ç—å –µ—â—ë —Ä–∞–∑–ª–∏—á–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã, —ç—Ç–∏ —Å–∞–º—ã–µ —è—Ä–∫–∏–µ! \n\n"
                                     "<i>–ë–∏–∑–Ω–µ—Å —Ç—Ä–µ–Ω–∏–Ω–≥–∏ –ø—Ä–æ–≤–æ–¥–∏–ª–∞ –≤ 2–≥–∏—Å, –ê–ª—å—Ñ–∞-–ë–∞–Ω–∫, –∫–æ–º–ø–∞–Ω–∏—è –ü—Ä–æ–ª–∞–π–Ω!</i>",
                                     parse_mode="HTML", reply_markup=back)
    elif call.data == "callback":
        await call.message.edit_text("<b>–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∫–æ—É—á–µ—Ä–∞ - –ñ–∞–Ω–Ω—ã –ü–∞–Ω—á–∏—à–∏–Ω–æ–π!</b>",
                                     parse_mode="HTML", reply_markup=mark)
    elif call.data == "users_list":
        users = InlineKeyboardMarkup()
        users.add(InlineKeyboardButton("–û–ø–ª–∞—Ç–∏–ª–∏üôÇ", callback_data="opl_users"), InlineKeyboardButton("–ù–µ –æ–ø–ª–∞—Ç–∏–ª–∏‚òπ", callback_data="noopl_users"))
        users.add(InlineKeyboardButton("–ù–∞–∑–∞–¥üëà", callback_data="adm_inline"))
        await call.message.edit_text("<b>–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</b>", parse_mode="HTML", reply_markup=users)
    elif call.data == "opl_users":
        row = cursor.execute("SELECT * FROM users WHERE opl_why = 'opl'").fetchall()
        opl = InlineKeyboardMarkup()
        for i in range(len(row)):
            opl.add(InlineKeyboardButton(f"{row[i][2]}", callback_data=f"{row[i][1]}"), InlineKeyboardButton("‚úÖ", callback_data=f"no_give_{row[i][1]}"))
        opl.add(InlineKeyboardButton("–ù–∞–∑–∞–¥üëà", callback_data="users_list"))
        await call.message.edit_text("<b>–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>\n\n"
                                     "P.S. —á—Ç–æ–±—ã –æ–±–æ–∑–Ω–∞—á–∏—Ç—å —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –æ–ø–ª–∞—Ç–∏–ª –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ '‚úÖ'", parse_mode="HTML", reply_markup=opl)
    elif call.data == "noopl_users":
        row = cursor.execute("SELECT * FROM users WHERE opl_why = 'no_opl'").fetchall()
        opl = InlineKeyboardMarkup()
        for i in range(len(row)):
            opl.add(InlineKeyboardButton(f"{row[i][2]}", callback_data=f"{row[i][1]}"), InlineKeyboardButton("üö´", callback_data=f"give_{row[i][1]}"))
        opl.add(InlineKeyboardButton("–ù–∞–∑–∞–¥üëà", callback_data="users_list"))
        await call.message.edit_text("<b>–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>\n\n"
                                     "P.S. —á—Ç–æ–±—ã –æ–±–æ–∑–Ω–∞—á–∏—Ç—å —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–ø–ª–∞—Ç–∏–ª –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ 'üö´'",
                                     parse_mode="HTML", reply_markup=opl)
    elif call.data == "adm_inline":
        adm = InlineKeyboardMarkup()
        adm.add(InlineKeyboardButton("–°–ø–∏—Å–∫–∏ —é–∑–µ—Ä–æ–≤", callback_data="users_list"))
        adm.add(InlineKeyboardButton("–†–∞—Å—Å—ã–ª–∫–∞", callback_data="send_mess"))
        await bot.send_message(call.message.chat.id, "<b>–û–¥–æ–±—Ä–µ–Ω–æ‚úÖ</b>", parse_mode="HTML", reply_markup=adm)
    elif call.data == "send_mess":
        await call.message.edit_text("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏:")
        await FSM.message.set()
@dp.message_handler(state=FSM.message)
async def message(message, state: FSMContext):
    message = message.text
    await state.update_data(message=message)
    data = await state.get_data()
    message = data.get('message')
    row = cursor.execute("SELECT * FROM users").fetchall()
    for i in range(len(row)):
        await bot.send_message(row[i][1], message, parse_mode="HTML")
    print("—Ä–∞—Å—Å—ã–ª–∫–∞ –≥–æ—Ç–æ–≤–∞!")
    await state.finish()
executor.start_polling(dp)
